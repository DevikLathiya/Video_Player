<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.meghalaya.hellomegha">
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
   <application
       android:enableOnBackInvokedCallback="true"
        android:label="Hello Meghalaya"
        android:name="${applicationName}"
       android:launchMode="singleTop"
        android:requestLegacyExternalStorage="true"
        android:usesCleartextTraffic="true"
       android:windowSoftInputMode="adjustResize"
       android:hardwareAccelerated="true"
        android:icon="@mipmap/launcher_icon"
       tools:ignore="GoogleAppIndexingWarning">
        <activity
            android:showWhenLocked="true"
            android:turnScreenOn="true"
            android:name="com.ryanheise.audioservice.AudioServiceActivity"
            android:exported="true"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:supportsPictureInPicture="true"
            android:windowSoftInputMode="adjustResize"
            tools:targetApi="o_mr1">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <intent-filter>
                <action android:name="FLUTTER_NOTIFICATION_CLICK" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

        </activity>
       <receiver android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver"
           android:exported="true">
       </receiver>
       <service android:name="com.ryanheise.audioservice.AudioService"
           android:exported="true" tools:ignore="Instantiatable">
           <intent-filter>
               <action android:name="android.media.browse.MediaBrowserService" />
           </intent-filter>
       </service>

       <receiver android:name="com.ryanheise.audioservice.MediaButtonReceiver"
           android:exported="true" tools:ignore="Instantiatable">
           <intent-filter>
               <action android:name="android.intent.action.MEDIA_BUTTON" />
           </intent-filter>
       </receiver>
       <meta-data
           android:name="assets.audio.player.notification.icon"
           android:resource="@drawable/ic_music_custom"/>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
       <meta-data
           android:name="assets.audio.player.notification.place.holder"
           android:resource="@drawable/notification_place_holder"/>
       <provider
           android:name="androidx.core.content.FileProvider"
           android:authorities="com.meghalaya.hellomegha.flutter_downloader.provider"
           android:exported="false"
           android:grantUriPermissions="true">
           <meta-data
               android:name="android.support.FILE_PROVIDER_PATHS"
               android:resource="@xml/provide_paths"/>
       </provider>
       <provider
           android:name="androidx.startup.InitializationProvider"
           android:authorities="${applicationId}.androidx-startup"
           android:exported="false"
           tools:node="merge">
           <meta-data
               android:name="androidx.work.WorkManagerInitializer"
               android:value="androidx.startup"
               tools:node="remove" />
       </provider>

       <!-- declare customized Initializer -->
       <provider
           android:name="vn.hunghd.flutterdownloader.FlutterDownloaderInitializer"
           android:authorities="${applicationId}.flutter-downloader-init"
           android:exported="false">
           <meta-data
               android:name="vn.hunghd.flutterdownloader.MAX_CONCURRENT_TASKS"
               android:value="5" />
       </provider>
       <receiver android:name="com.google.firebase.iid.FirebaseInstanceIdInternalReceiver" android:exported="false" />
       <receiver android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver" android:exported="true" android:permission="com.google.android.c2dm.permission.SEND">
           <intent-filter>
               <action android:name="com.google.android.c2dm.intent.RECEIVE" />
               <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
               <category android:name="${applicationId}" />
           </intent-filter>
       </receiver>
    </application>
    <queries>
        <!-- If your app checks for SMS support -->
        <!-- If your app checks for call support -->
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <data android:scheme="tel" />
        </intent>
    </queries>
</manifest>